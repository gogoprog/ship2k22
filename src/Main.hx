import js.Browser.document;
import js.Browser.window;
import w.W;

typedef Bullet = {
    var x:Float;
    var y:Float;
    var d:Int;
}

typedef Enemy = {
    var x:Float;
    var t:Float;
    var life:Int;
}

typedef Particle = {
    var x:Float;
    var y:Float;
    var t:Float;
}

typedef Bonus = {
    var x:Float;
    var y:Float;
    var b:Int;
}

class Main {

    static var canvasCounter = 0;
    static function createText(text:String):js.html.CanvasElement {
        var c:js.html.CanvasElement = cast window.document.createElement("canvas");
        c.id = "cid" + canvasCounter++;
        c.width = 256;
        c.height= 64;

        var ctx:js.html.CanvasRenderingContext2D = c.getContext('2d');
        ctx.font = '32px serif';
        ctx.fillStyle = "#000";
        ctx.fillText(text, 32, 32);


        return c;
    }
    static function main() {
        var w = window;
        var c:js.html.CanvasElement = cast w.document.querySelector("canvas");
        var screenSize = 512;
        c.width = c.height = screenSize;
        c.style.border = "1px solid black";
        var ctx:Dynamic = {};
        var lastFireTime:Int;
        var rseed = 0;
        var mx;
        var life:Int;
        var power:Int;
        var mustFire:Bool;
        var bullets:Array<Bullet>;
        var enemies:Array<Enemy>;
        var particles:Array<Particle>;
        var bonuses:Array<Bonus>;
        var time:Int = 0;
        var extremes = [-1, 1];
        var m = Math;
        var abs = m.abs;
        var sin = m.sin;
        var cos = m.cos;
        var state = 0;
        var score;
        var bestScore = 0;
        function random():Float {
            var x = (sin(rseed++) + 1) * 9999;
            return x - Std.int(x);
        }
        w.onmousedown = w.onmouseup = function(e) {
            mustFire = untyped e.buttons;
        }
        w.onmousemove = function(e) {
            mx = 512 - e.clientX;
        }
        function getn(arr:Dynamic) {
            var n = arr.length;

            for(i in 0...n) {
                if(arr[i].t > 666 || abs(arr[i].y) > screenSize*2) {
                    return i;
                }
            }

            return n;
        }
        function fire(x, y, d) {
            bullets[getn(bullets)] = {x:x, y:y, d:d};
        }
        function explode(x, y) {
            for(j in 0...28) {
                particles[getn(particles)] = {x:x, y:y, t:0};
            }

            untyped z(1, .05, 652, 1, .01, .6, 4, 71, .9);
        }
        W.reset(c);
        W.clearColor("#001");
        W.camera({x:256, y:256, z:496, rz:180, fov:27});
        W.light({x:0.5, y:1, z:-0.5});
        W.add("spaceship", {
            vertices: [7.25, 1.43, 3.05, 7.25, 1.43, 3.32, 7.37, 1.38, 3.05, 7.37, 1.38, 3.32, 7.42, 1.26, 3.05, 7.42, 1.26, 3.32, 7.37, 1.14, 3.05, 7.37, 1.14, 3.32, 7.25, 1.09, 3.05, 7.25, 1.09, 3.32, 7.13, 1.14, 3.05, 7.13, 1.14, 3.32, 7.08, 1.26, 3.05, 7.08, 1.26, 3.32, 7.13, 1.38, 3.05, 7.13, 1.38, 3.32, 7.25, 1.41, 3.38, 7.36, 1.37, 3.38, 7.4, 1.26, 3.38, 7.36, 1.15, 3.38, 7.25, 1.11, 3.38, 7.14, 1.15, 3.38, 7.1, 1.26, 3.38, 7.14, 1.37, 3.38, 7.25, 1.37, 3.38, 7.33, 1.34, 3.38, 7.36, 1.26, 3.38, 7.33, 1.18, 3.38, 7.25, 1.15, 3.38, 7.17, 1.18, 3.38, 7.14, 1.26, 3.38, 7.17, 1.34, 3.38, 7.25, 1.37, 3.98, 7.33, 1.34, 3.98, 7.36, 1.26, 3.98, 7.33, 1.18, 3.98, 7.25, 1.15, 3.98, 7.17, 1.18, 3.98, 7.14, 1.26, 3.98, 7.17, 1.34, 3.98, 7.25, 1.34, 3.98, 7.31, 1.32, 3.98, 7.33, 1.26, 3.98, 7.31, 1.2, 3.98, 7.25, 1.18, 3.98, 7.19, 1.2, 3.98, 7.17, 1.26, 3.98, 7.19, 1.32, 3.98, 7.25, 1.34, 3.95, 7.31, 1.32, 3.95, 7.33, 1.26, 3.95, 7.31, 1.2, 3.95, 7.25, 1.18, 3.95, 7.19, 1.2, 3.95, 7.17, 1.26, 3.95, 7.19, 1.32, 3.95, 7.25, 1.34, 3.68, 7.31, 1.32, 3.68, 7.33, 1.26, 3.68, 7.31, 1.2, 3.68, 7.25, 1.18, 3.68, 7.19, 1.2, 3.68, 7.17, 1.26, 3.68, 7.19, 1.32, 3.68, 7.74, 1.47, 2.81, 7.74, 1.47, 3.09, 7.86, 1.42, 2.81, 7.86, 1.42, 3.09, 7.91, 1.3, 2.81, 7.91, 1.3, 3.09, 7.86, 1.17, 2.81, 7.86, 1.17, 3.09, 7.74, 1.12, 2.81, 7.74, 1.12, 3.09, 7.61, 1.17, 2.81, 7.61, 1.17, 3.09, 7.56, 1.3, 2.81, 7.56, 1.3, 3.09, 7.61, 1.42, 2.81, 7.61, 1.42, 3.09, 7.74, 1.45, 3.14, 7.84, 1.4, 3.14, 7.89, 1.3, 3.14, 7.84, 1.19, 3.14, 7.74, 1.15, 3.14, 7.63, 1.19, 3.14, 7.59, 1.3, 3.14, 7.63, 1.4, 3.14, 7.74, 1.4, 3.14, 7.81, 1.37, 3.14, 7.85, 1.3, 3.14, 7.81, 1.22, 3.14, 7.74, 1.19, 3.14, 7.66, 1.22, 3.14, 7.63, 1.3, 3.14, 7.66, 1.37, 3.14, 7.74, 1.4, 3.75, 7.81, 1.37, 3.75, 7.85, 1.3, 3.75, 7.81, 1.22, 3.75, 7.74, 1.19, 3.75, 7.66, 1.22, 3.75, 7.63, 1.3, 3.75, 7.66, 1.37, 3.75, 7.74, 1.38, 3.75, 7.8, 1.35, 3.75, 7.82, 1.3, 3.75, 7.8, 1.24, 3.75, 7.74, 1.21, 3.75, 7.68, 1.24, 3.75, 7.66, 1.3, 3.75, 7.68, 1.35, 3.75, 7.74, 1.38, 3.72, 7.8, 1.35, 3.72, 7.82, 1.3, 3.72, 7.8, 1.24, 3.72, 7.74, 1.21, 3.72, 7.68, 1.24, 3.72, 7.66, 1.3, 3.72, 7.68, 1.35, 3.72, 7.74, 1.38, 3.44, 7.8, 1.35, 3.44, 7.82, 1.3, 3.44, 7.8, 1.24, 3.44, 7.74, 1.21, 3.44, 7.68, 1.24, 3.44, 7.66, 1.3, 3.44, 7.68, 1.35, 3.44, 2.75, 1.43, 3.05, 2.75, 1.43, 3.32, 2.63, 1.38, 3.05, 2.63, 1.38, 3.32, 2.58, 1.26, 3.05, 2.58, 1.26, 3.32, 2.63, 1.14, 3.05, 2.63, 1.14, 3.32, 2.75, 1.09, 3.05, 2.75, 1.09, 3.32, 2.87, 1.14, 3.05, 2.87, 1.14, 3.32, 2.92, 1.26, 3.05, 2.92, 1.26, 3.32, 2.87, 1.38, 3.05, 2.87, 1.38, 3.32, 2.75, 1.41, 3.38, 2.64, 1.37, 3.38, 2.6, 1.26, 3.38, 2.64, 1.15, 3.38, 2.75, 1.11, 3.38, 2.86, 1.15, 3.38, 2.9, 1.26, 3.38, 2.86, 1.37, 3.38, 2.75, 1.37, 3.38, 2.67, 1.34, 3.38, 2.64, 1.26, 3.38, 2.67, 1.18, 3.38, 2.75, 1.15, 3.38, 2.83, 1.18, 3.38, 2.86, 1.26, 3.38, 2.83, 1.34, 3.38, 2.75, 1.37, 3.98, 2.67, 1.34, 3.98, 2.64, 1.26, 3.98, 2.67, 1.18, 3.98, 2.75, 1.15, 3.98, 2.83, 1.18, 3.98, 2.86, 1.26, 3.98, 2.83, 1.34, 3.98, 2.75, 1.34, 3.98, 2.69, 1.32, 3.98, 2.67, 1.26, 3.98, 2.69, 1.2, 3.98, 2.75, 1.18, 3.98, 2.81, 1.2, 3.98, 2.83, 1.26, 3.98, 2.81, 1.32, 3.98, 2.75, 1.34, 3.95, 2.69, 1.32, 3.95, 2.67, 1.26, 3.95, 2.69, 1.2, 3.95, 2.75, 1.18, 3.95, 2.81, 1.2, 3.95, 2.83, 1.26, 3.95, 2.81, 1.32, 3.95, 2.75, 1.34, 3.68, 2.69, 1.32, 3.68, 2.67, 1.26, 3.68, 2.69, 1.2, 3.68, 2.75, 1.18, 3.68, 2.81, 1.2, 3.68, 2.83, 1.26, 3.68, 2.81, 1.32, 3.68, 2.26, 1.47, 2.81, 2.26, 1.47, 3.09, 2.14, 1.42, 2.81, 2.14, 1.42, 3.09, 2.09, 1.3, 2.81, 2.09, 1.3, 3.09, 2.14, 1.17, 2.81, 2.14, 1.17, 3.09, 2.26, 1.12, 2.81, 2.26, 1.12, 3.09, 2.39, 1.17, 2.81, 2.39, 1.17, 3.09, 2.44, 1.3, 2.81, 2.44, 1.3, 3.09, 2.39, 1.42, 2.81, 2.39, 1.42, 3.09, 2.26, 1.45, 3.14, 2.16, 1.4, 3.14, 2.11, 1.3, 3.14, 2.16, 1.19, 3.14, 2.26, 1.15, 3.14, 2.37, 1.19, 3.14, 2.41, 1.3, 3.14, 2.37, 1.4, 3.14, 2.26, 1.4, 3.14, 2.19, 1.37, 3.14, 2.15, 1.3, 3.14, 2.19, 1.22, 3.14, 2.26, 1.19, 3.14, 2.34, 1.22, 3.14, 2.37, 1.3, 3.14, 2.34, 1.37, 3.14, 2.26, 1.4, 3.75, 2.19, 1.37, 3.75, 2.15, 1.3, 3.75, 2.19, 1.22, 3.75, 2.26, 1.19, 3.75, 2.34, 1.22, 3.75, 2.37, 1.3, 3.75, 2.34, 1.37, 3.75, 2.26, 1.38, 3.75, 2.2, 1.35, 3.75, 2.18, 1.3, 3.75, 2.2, 1.24, 3.75, 2.26, 1.21, 3.75, 2.32, 1.24, 3.75, 2.34, 1.3, 3.75, 2.32, 1.35, 3.75, 2.26, 1.38, 3.72, 2.2, 1.35, 3.72, 2.18, 1.3, 3.72, 2.2, 1.24, 3.72, 2.26, 1.21, 3.72, 2.32, 1.24, 3.72, 2.34, 1.3, 3.72, 2.32, 1.35, 3.72, 2.26, 1.38, 3.44, 2.2, 1.35, 3.44, 2.18, 1.3, 3.44, 2.2, 1.24, 3.44, 2.26, 1.21, 3.44, 2.32, 1.24, 3.44, 2.34, 1.3, 3.44, 2.32, 1.35, 3.44, 6.37, .35, 1.1, 6.37, .25, 4.37, 6.64, 1.79, 1.1, 6.64, 1.69, 4.37, 5.84, .26, 5.95, 6.11, 1.37, 5.95, 5.48, .68, 7.08, 5.48, .91, 7.08, 5.95, .79, .38, 8.43, 1.56, 2.83, 6.21, 1.86, .38, 8.43, 1.56, 1.5, 5.55, 0, 1.1, 8.43, 1.19, 2.83, 5.55, 0, 4.37, 8.43, 1.19, 1.5, 5.55, 2.16, 1.1, 8.43, 1.14, 1.33, 5.55, 2.06, 4.37, 8.43, 1.14, 3, 5.41, .08, 5.95, 8.43, 1.61, 1.33, 5.41, 1.73, 5.95, 8.43, 1.61, 3, 5.31, .65, 7.08, 6.64, 1.6, 3.96, 5.31, .96, 7.08, 6.64, 1.6, 1.51, 5.4, .56, .38, 6.64, .81, 3.96, 5.4, 2.15, .38, 6.64, .81, 1.51, 10, 1.57, 1.51, 10, 1.57, 1.08, 8.2, 1.18, 3.13, 8.2, 1.53, 3.13, 6.87, 1.52, 3.83, 6.87, .94, 3.83, 8.2, 1.18, 2.69, 8.2, 1.53, 2.69, 6.87, 1.52, 3.4, 6.87, .94, 3.4, 5.94, 1.02, .25, 5.94, 1.65, .25, 5.46, .88, .25, 5.46, 1.82, .25, 6.07, .93, 0, 6.07, 1.73, 0, 5.46, .75, 0, 5.46, 1.95, 0, 5.64, 1.01, 6.87, 5.59, .58, 6.87, 5.34, 1.14, 6.87, 5.34, .52, 6.87, 8.2, 1.53, 3.02, 8.2, 1.18, 3.02, 6.87, .94, 3.73, 6.87, 1.52, 3.73, 3.63, .35, 1.1, 3.63, .25, 4.37, 3.36, 1.79, 1.1, 3.36, 1.69, 4.37, 4.16, .26, 5.95, 3.89, 1.37, 5.95, 4.52, .68, 7.08, 4.52, .91, 7.08, 4.05, .79, .38, 1.57, 1.56, 2.83, 3.79, 1.86, .38, 1.57, 1.56, 1.5, 4.45, 0, 1.1, 1.57, 1.19, 2.83, 4.45, 0, 4.37, 1.57, 1.19, 1.5, 4.45, 2.16, 1.1, 1.57, 1.14, 1.33, 4.45, 2.06, 4.37, 1.57, 1.14, 3, 4.59, .08, 5.95, 1.57, 1.61, 1.33, 4.59, 1.73, 5.95, 1.57, 1.61, 3, 4.69, .65, 7.08, 3.36, 1.6, 3.96, 4.69, .96, 7.08, 3.36, 1.6, 1.51, 4.6, .56, .38, 3.36, .81, 3.96, 4.6, 2.15, .38, 3.36, .81, 1.51, 5, 0, 1.1, 5, 0, 4.37, 5, 2.16, 1.1, 5, 2.06, 4.37, 5, .08, 5.95, 5, 1.73, 5.95, 5, .65, 7.08, 5, .96, 7.08, 5, .56, .38, 5, 2.15, .38, 0, 1.57, 1.51, 0, 1.57, 1.08, 1.8, 1.18, 3.13, 1.8, 1.53, 3.13, 3.13, 1.52, 3.83, 3.13, .94, 3.83, 1.8, 1.18, 2.69, 1.8, 1.53, 2.69, 3.13, 1.52, 3.4, 3.13, .94, 3.4, 4.06, 1.02, .25, 4.06, 1.65, .25, 4.54, .88, .25, 4.54, 1.82, .25, 5, .88, .25, 5, 1.82, .25, 3.93, .93, 0, 3.93, 1.73, 0, 4.54, .75, 0, 4.54, 1.95, 0, 5, .75, 0, 5, 1.95, 0, 4.36, 1.01, 6.87, 4.41, .58, 6.87, 4.66, 1.14, 6.87, 4.66, .52, 6.87, 5, 1.14, 6.87, 5, .52, 6.87, 1.8, 1.53, 3.02, 1.8, 1.18, 3.02, 3.13, .94, 3.73, 3.13, 1.52, 3.73],
            indices: [0, 1, 3, 0, 3, 2, 2, 3, 5, 2, 5, 4, 4, 5, 7, 4, 7, 6, 6, 7, 9, 6, 9, 8, 8, 9, 11, 8, 11, 10, 10, 11, 13, 10, 13, 12, 3, 1, 16, 3, 16, 17, 1, 0, 14, 1, 14, 15, 12, 13, 15, 12, 15, 14, 0, 2, 14, 2, 12, 14, 2, 4, 12, 4, 10, 12, 4, 6, 10, 6, 8, 10, 21, 20, 28, 21, 28, 29, 9, 7, 19, 9, 19, 20, 11, 9, 20, 11, 20, 21, 13, 11, 21, 13, 21, 22, 15, 13, 22, 15, 22, 23, 1, 15, 23, 1, 23, 16, 5, 3, 17, 5, 17, 18, 7, 5, 18, 7, 18, 19, 30, 29, 37, 30, 37, 38, 16, 23, 31, 16, 31, 24, 17, 16, 24, 17, 24, 25, 20, 19, 27, 20, 27, 28, 23, 22, 30, 23, 30, 31, 19, 18, 26, 19, 26, 27, 22, 21, 29, 22, 29, 30, 18, 17, 25, 18, 25, 26, 39, 38, 46, 39, 46, 47, 26, 25, 33, 26, 33, 34, 29, 28, 36, 29, 36, 37, 24, 31, 39, 24, 39, 32, 25, 24, 32, 25, 32, 33, 28, 27, 35, 28, 35, 36, 31, 30, 38, 31, 38, 39, 27, 26, 34, 27, 34, 35, 40, 47, 55, 40, 55, 48, 35, 34, 42, 35, 42, 43, 38, 37, 45, 38, 45, 46, 34, 33, 41, 34, 41, 42, 37, 36, 44, 37, 44, 45, 32, 39, 47, 32, 47, 40, 33, 32, 40, 33, 40, 41, 36, 35, 43, 36, 43, 44, 50, 49, 57, 50, 57, 58, 41, 40, 48, 41, 48, 49, 44, 43, 51, 44, 51, 52, 47, 46, 54, 47, 54, 55, 43, 42, 50, 43, 50, 51, 46, 45, 53, 46, 53, 54, 42, 41, 49, 42, 49, 50, 45, 44, 52, 45, 52, 53, 57, 56, 63, 57, 63, 58, 63, 62, 58, 62, 61, 58, 61, 59, 58, 61, 60, 59, 53, 52, 60, 53, 60, 61, 48, 55, 63, 48, 63, 56, 49, 48, 56, 49, 56, 57, 52, 51, 59, 52, 59, 60, 55, 54, 62, 55, 62, 63, 51, 50, 58, 51, 58, 59, 54, 53, 61, 54, 61, 62, 64, 65, 67, 64, 67, 66, 66, 67, 69, 66, 69, 68, 68, 69, 71, 68, 71, 70, 70, 71, 73, 70, 73, 72, 72, 73, 75, 72, 75, 74, 74, 75, 77, 74, 77, 76, 67, 65, 80, 67, 80, 81, 78, 79, 65, 78, 65, 64, 76, 77, 79, 76, 79, 78, 64, 66, 78, 66, 76, 78, 66, 68, 76, 68, 74, 76, 68, 70, 74, 70, 72, 74, 85, 84, 92, 85, 92, 93, 73, 71, 83, 73, 83, 84, 75, 73, 84, 75, 84, 85, 77, 75, 85, 77, 85, 86, 79, 77, 86, 79, 86, 87, 65, 79, 87, 65, 87, 80, 69, 67, 81, 69, 81, 82, 71, 69, 82, 71, 82, 83, 94, 93, 101, 94, 101, 102, 80, 87, 95, 80, 95, 88, 81, 80, 88, 81, 88, 89, 84, 83, 91, 84, 91, 92, 87, 86, 94, 87, 94, 95, 83, 82, 90, 83, 90, 91, 86, 85, 93, 86, 93, 94, 82, 81, 89, 82, 89, 90, 103, 102, 110, 103, 110, 111, 90, 89, 97, 90, 97, 98, 93, 92, 100, 93, 100, 101, 88, 95, 103, 88, 103, 96, 89, 88, 96, 89, 96, 97, 92, 91, 99, 92, 99, 100, 95, 94, 102, 95, 102, 103, 91, 90, 98, 91, 98, 99, 104, 111, 119, 104, 119, 112, 99, 98, 106, 99, 106, 107, 102, 101, 109, 102, 109, 110, 98, 97, 105, 98, 105, 106, 101, 100, 108, 101, 108, 109, 96, 103, 111, 96, 111, 104, 97, 96, 104, 97, 104, 105, 100, 99, 107, 100, 107, 108, 114, 113, 121, 114, 121, 122, 105, 104, 112, 105, 112, 113, 108, 107, 115, 108, 115, 116, 111, 110, 118, 111, 118, 119, 107, 106, 114, 107, 114, 115, 110, 109, 117, 110, 117, 118, 106, 105, 113, 106, 113, 114, 109, 108, 116, 109, 116, 117, 121, 120, 127, 121, 127, 126, 121, 126, 122, 126, 125, 122, 125, 123, 122, 125, 124, 123, 117, 116, 124, 117, 124, 125, 112, 119, 127, 112, 127, 120, 113, 112, 120, 113, 120, 121, 116, 115, 123, 116, 123, 124, 119, 118, 126, 119, 126, 127, 115, 114, 122, 115, 122, 123, 118, 117, 125, 118, 125, 126, 128, 130, 131, 128, 131, 129, 130, 132, 133, 130, 133, 131, 132, 134, 135, 132, 135, 133, 134, 136, 137, 134, 137, 135, 136, 138, 139, 136, 139, 137, 138, 140, 141, 138, 141, 139, 131, 145, 144, 131, 144, 129, 142, 128, 129, 142, 129, 143, 140, 142, 143, 140, 143, 141, 128, 142, 130, 142, 132, 130, 142, 140, 132, 140, 134, 132, 140, 138, 134, 138, 136, 134, 149, 157, 156, 149, 156, 148, 137, 148, 147, 137, 147, 135, 139, 149, 148, 139, 148, 137, 141, 150, 149, 141, 149, 139, 143, 151, 150, 143, 150, 141, 129, 144, 151, 129, 151, 143, 133, 146, 145, 133, 145, 131, 135, 147, 146, 135, 146, 133, 158, 166, 165, 158, 165, 157, 144, 152, 159, 144, 159, 151, 145, 153, 152, 145, 152, 144, 148, 156, 155, 148, 155, 147, 151, 159, 158, 151, 158, 150, 147, 155, 154, 147, 154, 146, 150, 158, 157, 150, 157, 149, 146, 154, 153, 146, 153, 145, 167, 175, 174, 167, 174, 166, 154, 162, 161, 154, 161, 153, 157, 165, 164, 157, 164, 156, 152, 160, 167, 152, 167, 159, 153, 161, 160, 153, 160, 152, 156, 164, 163, 156, 163, 155, 159, 167, 166, 159, 166, 158, 155, 163, 162, 155, 162, 154, 168, 176, 183, 168, 183, 175, 163, 171, 170, 163, 170, 162, 166, 174, 173, 166, 173, 165, 162, 170, 169, 162, 169, 161, 165, 173, 172, 165, 172, 164, 160, 168, 175, 160, 175, 167, 161, 169, 168, 161, 168, 160, 164, 172, 171, 164, 171, 163, 178, 186, 185, 178, 185, 177, 169, 177, 176, 169, 176, 168, 172, 180, 179, 172, 179, 171, 175, 183, 182, 175, 182, 174, 171, 179, 178, 171, 178, 170, 174, 182, 181, 174, 181, 173, 170, 178, 177, 170, 177, 169, 173, 181, 180, 173, 180, 172, 185, 191, 184, 185, 186, 191, 186, 190, 191, 186, 187, 190, 187, 189, 190, 187, 188, 189, 181, 189, 188, 181, 188, 180, 176, 184, 191, 176, 191, 183, 177, 185, 184, 177, 184, 176, 180, 188, 187, 180, 187, 179, 183, 191, 190, 183, 190, 182, 179, 187, 186, 179, 186, 178, 182, 190, 189, 182, 189, 181, 192, 194, 195, 192, 195, 193, 194, 196, 197, 194, 197, 195, 196, 198, 199, 196, 199, 197, 198, 200, 201, 198, 201, 199, 200, 202, 203, 200, 203, 201, 202, 204, 205, 202, 205, 203, 195, 209, 208, 195, 208, 193, 206, 192, 193, 206, 193, 207, 204, 206, 207, 204, 207, 205, 192, 206, 194, 206, 196, 194, 206, 204, 196, 204, 198, 196, 204, 202, 198, 202, 200, 198, 213, 221, 220, 213, 220, 212, 201, 212, 211, 201, 211, 199, 203, 213, 212, 203, 212, 201, 205, 214, 213, 205, 213, 203, 207, 215, 214, 207, 214, 205, 193, 208, 215, 193, 215, 207, 197, 210, 209, 197, 209, 195, 199, 211, 210, 199, 210, 197, 222, 230, 229, 222, 229, 221, 208, 216, 223, 208, 223, 215, 209, 217, 216, 209, 216, 208, 212, 220, 219, 212, 219, 211, 215, 223, 222, 215, 222, 214, 211, 219, 218, 211, 218, 210, 214, 222, 221, 214, 221, 213, 210, 218, 217, 210, 217, 209, 231, 239, 238, 231, 238, 230, 218, 226, 225, 218, 225, 217, 221, 229, 228, 221, 228, 220, 216, 224, 231, 216, 231, 223, 217, 225, 224, 217, 224, 216, 220, 228, 227, 220, 227, 219, 223, 231, 230, 223, 230, 222, 219, 227, 226, 219, 226, 218, 232, 240, 247, 232, 247, 239, 227, 235, 234, 227, 234, 226, 230, 238, 237, 230, 237, 229, 226, 234, 233, 226, 233, 225, 229, 237, 236, 229, 236, 228, 224, 232, 239, 224, 239, 231, 225, 233, 232, 225, 232, 224, 228, 236, 235, 228, 235, 227, 242, 250, 249, 242, 249, 241, 233, 241, 240, 233, 240, 232, 236, 244, 243, 236, 243, 235, 239, 247, 246, 239, 246, 238, 235, 243, 242, 235, 242, 234, 238, 246, 245, 238, 245, 237, 234, 242, 241, 234, 241, 233, 237, 245, 244, 237, 244, 236, 249, 255, 248, 249, 250, 255, 250, 254, 255, 250, 251, 254, 251, 253, 254, 251, 252, 253, 245, 253, 252, 245, 252, 244, 240, 248, 255, 240, 255, 247, 241, 249, 248, 241, 248, 240, 244, 252, 251, 244, 251, 243, 247, 255, 254, 247, 254, 246, 243, 251, 250, 243, 250, 242, 246, 254, 253, 246, 253, 245, 259, 257, 285, 259, 285, 281, 257, 259, 261, 257, 261, 260, 270, 257, 260, 270, 260, 276, 309, 307, 262, 309, 262, 280, 307, 306, 263, 307, 263, 262, 272, 258, 266, 272, 266, 286, 258, 256, 264, 258, 264, 266, 256, 257, 270, 256, 270, 268, 258, 272, 274, 258, 274, 259, 277, 279, 265, 277, 265, 267, 256, 268, 284, 256, 284, 264, 275, 273, 271, 275, 271, 269, 306, 308, 282, 306, 282, 263, 279, 275, 269, 279, 269, 265, 259, 274, 278, 259, 278, 261, 287, 283, 277, 287, 277, 273, 347, 270, 276, 347, 276, 350, 262, 263, 282, 262, 282, 280, 279, 281, 292, 279, 292, 291, 283, 281, 279, 283, 279, 277, 383, 309, 280, 383, 280, 352, 300, 370, 376, 300, 376, 304, 273, 277, 267, 273, 267, 271, 257, 256, 287, 257, 287, 285, 348, 272, 286, 348, 286, 355, 268, 270, 347, 268, 347, 346, 272, 348, 349, 272, 349, 274, 268, 346, 354, 268, 354, 284, 308, 382, 353, 308, 353, 282, 274, 349, 351, 274, 351, 278, 256, 258, 283, 256, 283, 287, 280, 282, 353, 280, 353, 352, 258, 259, 281, 258, 281, 283, 266, 264, 298, 266, 298, 299, 285, 287, 273, 285, 273, 275, 269, 271, 289, 269, 289, 288, 265, 269, 288, 267, 265, 288, 267, 288, 289, 271, 267, 289, 311, 310, 295, 311, 295, 294, 281, 285, 293, 281, 293, 292, 275, 279, 291, 275, 291, 290, 285, 275, 290, 285, 290, 293, 296, 297, 294, 296, 294, 295, 313, 312, 297, 313, 297, 296, 310, 313, 296, 310, 296, 295, 312, 311, 294, 312, 294, 297, 284, 354, 370, 284, 370, 300, 264, 284, 300, 264, 300, 298, 355, 286, 301, 355, 301, 371, 286, 266, 299, 286, 299, 301, 376, 377, 305, 303, 376, 305, 303, 302, 376, 302, 304, 376, 298, 300, 304, 298, 304, 302, 371, 301, 305, 371, 305, 377, 299, 298, 302, 299, 302, 303, 301, 299, 303, 301, 303, 305, 276, 260, 307, 276, 307, 309, 260, 261, 306, 260, 306, 307, 261, 278, 308, 261, 308, 306, 350, 276, 309, 350, 309, 383, 278, 351, 382, 278, 382, 308, 290, 291, 310, 290, 310, 311, 292, 293, 312, 292, 312, 313, 291, 292, 313, 291, 313, 310, 293, 290, 311, 293, 311, 312, 317, 339, 343, 317, 343, 315, 315, 318, 319, 315, 319, 317, 328, 334, 318, 328, 318, 315, 381, 338, 320, 381, 320, 379, 379, 320, 321, 379, 321, 378, 330, 344, 324, 330, 324, 316, 316, 324, 322, 316, 322, 314, 314, 326, 328, 314, 328, 315, 316, 317, 332, 316, 332, 330, 335, 325, 323, 335, 323, 337, 314, 322, 342, 314, 342, 326, 333, 327, 329, 333, 329, 331, 378, 321, 340, 378, 340, 380, 337, 323, 327, 337, 327, 333, 317, 319, 336, 317, 336, 332, 345, 331, 335, 345, 335, 341, 347, 350, 334, 347, 334, 328, 320, 338, 340, 320, 340, 321, 337, 359, 360, 337, 360, 339, 341, 335, 337, 341, 337, 339, 383, 352, 338, 383, 338, 381, 368, 374, 376, 368, 376, 370, 331, 329, 325, 331, 325, 335, 315, 343, 345, 315, 345, 314, 348, 355, 344, 348, 344, 330, 326, 346, 347, 326, 347, 328, 330, 332, 349, 330, 349, 348, 326, 342, 354, 326, 354, 346, 380, 340, 353, 380, 353, 382, 332, 336, 351, 332, 351, 349, 314, 345, 341, 314, 341, 316, 338, 352, 353, 338, 353, 340, 316, 341, 339, 316, 339, 317, 324, 367, 366, 324, 366, 322, 343, 333, 331, 343, 331, 345, 327, 356, 357, 327, 357, 329, 323, 356, 327, 325, 357, 356, 325, 356, 323, 329, 357, 325, 385, 362, 363, 385, 363, 384, 339, 360, 361, 339, 361, 343, 333, 358, 359, 333, 359, 337, 343, 361, 358, 343, 358, 333, 364, 363, 362, 364, 362, 365, 387, 364, 365, 387, 365, 386, 384, 363, 364, 384, 364, 387, 386, 365, 362, 386, 362, 385, 342, 368, 370, 342, 370, 354, 322, 366, 368, 322, 368, 342, 355, 371, 369, 355, 369, 344, 344, 369, 367, 344, 367, 324, 373, 375, 377, 373, 377, 376, 373, 376, 372, 376, 374, 372, 366, 372, 374, 366, 374, 368, 371, 377, 375, 371, 375, 369, 367, 373, 372, 367, 372, 366, 369, 375, 373, 369, 373, 367, 334, 381, 379, 334, 379, 318, 318, 379, 378, 318, 378, 319, 319, 378, 380, 319, 380, 336, 350, 383, 381, 350, 381, 334, 336, 380, 382, 336, 382, 351, 358, 385, 384, 358, 384, 359, 360, 387, 386, 360, 386, 361, 359, 384, 387, 359, 387, 360, 361, 386, 385, 361, 385, 358],
            uv:null
        });
        W.spaceship({n:"ship", x:0, y:460, z:0, size:6, rx:90, ry:180, b:"#fa6"});
        var max_enemies = 16;
        var max_bullets = 48;
        var max_bonuses = 16;
        var max_particles = 128;
        var max_stars = 32;
        var ship_offset = 30;

        for(i in 0...max_enemies) {
            W.spaceship({n:"e" + i, x:-10000, y:460, z:0, size:6, rx:90, ry:180, rz:180, b:"#f34"});
        }

        for(i in 0...max_bullets) {
            W.cube({n:"b" + i, x:-10000, y:0, z:0, h:12, w:4, b:"#aaa"});
        }

        for(i in 0...max_stars) {
            W.sphere({n:"s" + i, size:2});
        }

        for(i in 0...max_particles) {
            W.sphere({n:"p" + i, size:4, b:"#f33"});
        }

        for(i in 0...max_bonuses) {
            W.sphere({n:"bo" + i, size:16, b:"#2a2"});
        }

        W.group({n:"menu"});
        W.plane({g:"menu", w:356, h:140, x:256, y:100, rz:180, t:createText("Ship2k22"), b:"#f00"});
        W.group({n:"hud"});
        W.plane({g:"hud", w:200, h:100, x:400, y:490, rz:180, t:createText("HP:"), b:"#f00"});
        function loop(t:Float) {
            rseed = 1;

            for(i in 0...max_stars) {
                W.move({n:"s"+i, x:(random() * screenSize), y:((random() * screenSize + t * (random() * 0.2)) % screenSize)});
            }

            if(state == 0) {
                W.move({n:"menu", x:0});
                W.move({n:"hud", x:-10000});

                /* scale(4); */
                /* ftext("SHIP2k", 24, 32); */
                /* scale(1/2); */
                /* drawShip(200, 160); */
                /* ftext("Click to play!", 42, 232); */
                /* scale(1/2); */
                /* ftext("Best score: " + bestScore, 32, 232); */
                if(mustFire && time > 60) {
                    state++;
                    lastFireTime = time = score = 0;
                    life = 30;
                    power = 1;
                    bullets = [];
                    enemies = [];
                    particles = [];
                    bonuses = [];
                }
            } else if(state == 1) {
                W.move({n:"menu", x:-10000});
                W.move({n:"hud", x:0});

                for(i in 0 ... max_bullets) {
                    var b = bullets[i];

                    if(b!=null) {
                        b.y += 10 * b.d;
                        /* col(b.d == -1 ? "#0f0" : "red"); */
                        W.move({n:"b"+i, x:b.x, y:b.y});

                        if(b.d > 0) {
                            if(abs(b.y - 420) + abs(b.x-mx) < 32) {
                                life--;
                                b.y = 999;
                                /* alpha(0.5); */
                                untyped z(1, .05, 918, .8, .04, 0, .2, 24, .6);

                                if(life < 1) {
                                    bestScore = cast m.max(score, bestScore);
                                    state = 0;
                                    time = 0;
                                }
                            }
                        }
                    } else {
                        W.move({n:"b"+i, x:-10000});
                    }
                }

                for(i in 0...max_bonuses) {
                    var b = bonuses[i];

                    if(b != null) {
                        b.y += 3;
                        var hit:Bool = false;

                        if(abs(b.y - 450) + abs(b.x-mx) < 32) {
                            b.y = 999;
                            hit = true;
                        }

                        if(b.b==0) {
                            if(hit) {
                                power++;
                                untyped z(1, .05, 115, .5, .9, .7, .9, 6, .3);
                            }
                        } else {
                            if(hit) {
                                life = cast m.min(life+1, 10);
                                untyped z(1, .05, 1704, .2, .2, .2, .1, 0, .6);
                            }
                        }

                        W.move({n:"bo"+i, x:b.x, y:b.y});
                    } else {
                        W.move({n:"bo"+i, x:-10000 });
                    }
                }

                W.move({n:"ship", x:mx + ship_offset});

                if(mustFire) {
                    if(time - lastFireTime > 15 - power/2) {
                        for(i in 0...cast power/2) {
                            fire((mx) - power*2 + i * 8, 435, -1);
                        }

                        lastFireTime = time;
                        untyped z(1, .05, 1355, .2, .6, .8, .1, .9, .9);
                    }
                }

                for(i in 0...max_particles) {
                    var p = particles[i];

                    if(p != null) {
                        p.t++;
                        var angle = i * 0.174;
                        var v = random() * 3;
                        p.x += cos(angle) * v;
                        p.y += sin(angle) * v;
                        W.move({n:"p"+i, x:p.x, y:p.y});
                    } else {
                        W.move({n:"p"+i, x:-10000 });
                    }
                }

                rseed = time;

                for(i in 0...max_enemies) {
                    var e = enemies[i];

                    if(e != null) {
                        var x = e.x + sin(++e.t / 99) * 99;
                        var y = -64 + e.t;

                        if(e.t % 60 < time/2000) {
                            untyped z(1, .05, 48, .1, .4, 5, 0, 84, .5);
                            fire(x, y, 1);
                        }

                        for(b in bullets) {
                            if(b.d < 0) {
                                if(abs(b.y - y) + abs(b.x-x) < 32) {
                                    b.y = -999;
                                    e.life -= 1;
                                    untyped z(1, .05, 179, .1, .5, 3.5, 1.7, 80, .6);

                                    if(e.life < 1) {
                                        e.t = 666;
                                        score += 100;
                                        explode(x, y);

                                        if(random() < 0.6) {
                                            bonuses[getn(bonuses)] = {x:x, y:y, b:time%2};
                                        }

                                        break;
                                    }
                                }
                            }
                        }

                        W.move({n:"e"+i, x:x - ship_offset, y:y});
                    } else {
                        W.move({n:"e"+i, x:-10000});
                    }
                }

                if((time % 150) < time/2000) {
                    enemies[getn(enemies)] = {x: screenSize * random(), t:0, life:5};
                }

                /* alpha(1); */
                /* col("#222"); */
                /* drawRect(256, 500, screenSize, 24); */
                /* col("#aaf"); */
                /* var str = ""; */
                /* for(i in 0...10) { */
                /*     str += i < life ? untyped ws : untyped bs; */
                /* } */
                /* ftext(str, 12, 506); */
                /* ftext(cast score, 400, 506); */
                /* ftext(cast power, 166, 506); */
            }

            time++;
            w.requestAnimationFrame(loop);
        }
        loop(0);
    }
}
